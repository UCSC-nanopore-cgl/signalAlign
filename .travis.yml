python:
  - 3.5
notifications: # set notification options
  slack:
    rooms:
      - ucsc-cgl:Edwfgt7MJEVZV9Lib3igueTF
    on_success: change
    on_failure: always
  email: false

  # email:
  #   recipients:
  #     - andbaile@ucsc.edu
  #	-rsafavi@ucsc.edu
    # change is when the repo status goes from pass to fail or vice versa
    # on_failure: always

#branches:
#  except:
#    - train_rna2
#    - train_rna
git:
  submodules: false

before_install:
- git submodule update --init
- sudo apt-get update -qq
#- sudo apt-get install libhdf5-serial-dev zlib1g-dev libbz2-dev liblzma-dev autotools-dev autoconf libopenblas-dev libhdf5-serial-dev cmake make libcunit1-dev
- sudo apt-get install bwa
- pip install google-compute-engine
#- git clone https://github.com/lh3/bwa.git
#- cd bwa
#- make
#- export PATH=$PATH:$PWD
#- cd ..

# sudo apt-get install libbz2-dev

install:
- sudo apt-get update
- wget https://repo.anaconda.com/archive/Anaconda3-5.3.0-Linux-x86_64.sh -O anaconda.sh;
- bash anaconda.sh -b -p $HOME/anaconda3
- export PATH="$HOME/anaconda3/bin:$PATH"
- export C_INCLUDE_PATH="$HOME/anaconda3/envs/signalalign/include:$C_INCLUDE_PATH"
- export LD_LIBRARY_PATH="$HOME/anaconda3/envs/signalalign/lib:$LD_LIBRARY_PATH"
- export LIBRARY_PATH="$HOME/anaconda3/envs/signalalign/lib:$LIBRARY_PATH"

- hash -r
- conda config --set always_yes yes --set changeps1 no
- conda update -q conda
# Useful for debugging any issues with conda
- conda info -a
- conda env create -f requirements.yml
- source activate signalalign
#- source activate nanotensor3.5
#- pip install google-compute-engine
- make
#- cd nanonet
#- python setup.py install
#- cd ../signalAlign
#- make
#- python setup.py install
#- pip install marginAlign
#- cd marginAlign
#- export BOTO_CONFIG=/dev/null
#- pip install -U numpy
#- pip install -U h5py
#- cd nanotensor

before_script: # configure a headless display to test plot generation
- "export DISPLAY=:99.0"
- "sh -e /etc/init.d/xvfb start"
- sleep 3 # give xvfb some time to start

script:
- export PATH=$PATH:$PWD/bin
- make test
#- cd src/signalalign/tests
#- python *
#- gcov-4.9 bin/signalMachine.c

#- cd bin
#- coverage run -m pytest
# - coverage run --source nanotensor -a nanotensor/tests/data_preparation_test.py
# - bash <(curl -s https://codecov.io/bash) -cF python
# after_script: # here's a build step block
# - echo "We can put normal shell commands here"
# - echo "more shell commands here"

#after_success:
#  - bash <(curl -s https://codecov.io/bash)
#
#  - codecov -t abf16a83-0e8f-4834-b033-3d8c7b4b7e63
